From 6e8abdf252e6a90d881f2864c5158c8cf368eb42 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <xnox@ubuntu.com>
Date: Sat, 12 Dec 2020 00:21:15 +0000
Subject: UBUNTU: fixup unaligned access.

Use unaligned helpers, to get/set values within a
datastructure. Otherwise armhf build of grub-uboot platform fails due
to -Wcast-align errors.

Fixes: rhboot-f34-support-non-ethernet.patch

Patch-Name: ubuntu-fixup-rhboot-f34-support-non-ethernet-2.patch
---
 grub-core/net/ethernet.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/grub-core/net/ethernet.c b/grub-core/net/ethernet.c
index 9aae83a5eb..01cd21785a 100644
--- a/grub-core/net/ethernet.c
+++ b/grub-core/net/ethernet.c
@@ -74,12 +74,12 @@ send_ethernet_packet (struct grub_net_network_level_interface *inf,
   /* Check if a vlan-tag is present. */
   if (vlantag != 0)
     {
-      *((grub_uint32_t *)eth) = grub_cpu_to_be32 (vlantag);
+      grub_set_unaligned32 (eth, grub_cpu_to_be32 (vlantag));
       eth += sizeof (vlantag);
     }
 
   /* Write ethertype */
-  *((grub_uint16_t*) eth) = grub_cpu_to_be16 (ethertype);
+  grub_set_unaligned16 (eth, grub_cpu_to_be16 (ethertype));
 
   if (!inf->card->opened)
     {
@@ -121,15 +121,15 @@ grub_net_recv_ethernet_packet (struct grub_net_buff *nb,
   grub_memcpy (src_hwaddress.mac, eth, hw_addr_len);
   eth += hw_addr_len;
 
-  type = grub_be_to_cpu16 (*(grub_uint16_t*)(eth));
+  type = grub_be_to_cpu16 (grub_get_unaligned16 (eth));
   if (type == VLANTAG_IDENTIFIER)
     {
       /* Skip vlan tag */
       eth += 2;
-      vlantag = grub_be_to_cpu16 (*(grub_uint16_t*)(eth));
+      vlantag = grub_be_to_cpu16 (grub_get_unaligned16 (eth));
       etherhdr_size += 4;
       eth += 2;
-      type = grub_be_to_cpu16 (*(grub_uint16_t*)(eth));
+      type = grub_be_to_cpu16 (grub_get_unaligned16 (eth));
     }
 
   err = grub_netbuff_pull (nb, etherhdr_size);
